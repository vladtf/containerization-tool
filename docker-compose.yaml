version: "2"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    restart: always
    networks:
      - tool_network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: always
    networks:
      - tool_network

  logger:
    build:
      context: ./database/fluentd
      dockerfile: Dockerfile
    container_name: fluentd
    restart: always
    networks:
      - tool_network
    volumes:
      - ./database/fluentd/fluent.conf:/fluentd/etc/fluent.conf
    ports:
      - 5140:5140
      - 5140:5140/udp

  db:
    build:
      context: ./database/db
      dockerfile: Dockerfile
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    container_name: db
    networks:
      - tool_network
    environment:
      MYSQL_ROOT_PASSWORD: abc@123
      MYSQL_DATABASE: localdb
    ports:
      - 3306:3306
  
  java_backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: java_backend
    restart: always
    ports:
      - 8180:8180
    depends_on:
      - db
      - kafka
    networks:
      - tool_network
    volumes:
      - upload_volume:/upload
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/localdb?useSSL=false&serverTimezone=UTC
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      containerization_tool_upload_directory: /upload
  
  container_manager:
    build:
      context: ./
      dockerfile: ./monitoring/Dockerfile.container
    container_name: container_manager
    restart: always
    depends_on:
      - kafka
      - db
    networks:
      - tool_network
    environment:
     KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - upload_volume:/upload
  traffic_monitor:
    build:
      context: ./
      dockerfile: ./monitoring/Dockerfile.traffic
    container_name: traffic_monitor
    restart: always
    cap_add:
      - NET_RAW
      - NET_ADMIN
    network_mode: host
    environment:
      KAFKA_BOOTSTRAP_SERVERS: localhost:29092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  forwarding_monitor:
    build:
      context: ./
      dockerfile: ./monitoring/Dockerfile.forwarding
    container_name: forwarding_monitor
    restart: always
    network_mode: host
    environment:
      KAFKA_BOOTSTRAP_SERVERS: localhost:29092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  python_backend:
    build:
      context: ./
      dockerfile: ./monitoring/Dockerfile.azure
    container_name: python_backend
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 5000:5000
    networks:
      - tool_network
    environment:
      AZURE_SUBSCRIPTION_NAME: Azure for Students
      MYSQL_HOST: db
      MYSQL_USER: root
      MYSQL_PASSWORD: abc@123
      MYSQL_DATABASE: localdb
      AZURE_CLIENT_ID: bcdc47fd-b461-4de8-82c4-6600cc44f470
      AZURE_TENANT_ID: a0867c7c-7aeb-44cb-96ed-32fa642ebe73
      AZURE_CLIENT_SECRET: IJ.8Q~RYjpYaQqbMWLHVRLKxp-RYih4APpCd6cnB

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    ports:
      - 3000:3000
    depends_on:
      - java_backend
      - python_backend
    networks:
      - tool_network
    volumes:
      - ~/.azure:/root/.azure
    environment:
      REACT_APP_BACKEND_URL: http://localhost:8180
      REACT_APP_PYTHON_BACKEND_URL: http://localhost:5000
    
networks:
  tool_network:
    driver: bridge

volumes:
  upload_volume: